# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# API específico - Archivos generados
*.png
*.jpg
*.jpeg
*.gif
*.svg
*.pdf

# CSV y archivos de datos generados
*.csv
*.json
predicciones_*.csv
full_analysis_response.json
response.json

# Archivos temporales de visualizaciones
viz_*.png
test_*.png
predicciones_futuras*.png

# Archivos de prueba
test_api_output.txt
test_results.json

# Archivos de configuración local
config_local.py
local_settings.py

# Archivos de backup
*.bak
*.backup
*.old

# Archivos de sistema
.DS_Store
Thumbs.db

# Archivos de Railway (mantener solo los necesarios)
# railway.json se mantiene
# Dockerfile se mantiene
# requirements.txt se mantiene

# Archivos de desarrollo
dev_*.py
debug_*.py
scratch_*.py

# Archivos de documentación temporal
temp_*.md
draft_*.md

# Archivos de análisis temporal
analysis_*.json
model_*.pkl
*.pickle

# Archivos de configuración de IDE específicos
.vscode/settings.json
.vscode/launch.json
.idea/workspace.xml
.idea/tasks.xml

# Archivos de profiling
*.prof
*.profile

# Archivos de memoria
*.mem

# Archivos de cache de matplotlib
.matplotlib/

# Archivos de cache de seaborn
.seaborn-data/

# Archivos temporales de pandas
.pandas/

# Archivos de configuración de scikit-learn
.sklearn/

# Archivos temporales de numpy
.numpy/